import React, { useState, useRef } from 'react';
import { Link } from 'react-router-dom';

var styles = {"navBarH":"_1h0l5","menuitemH":"_2InL9","searchBarH":"_DVtda","searchBarHInput":"_19Zyf","menuitemHRTL":"_oDMHY","navBarV":"_3mTvp","menuitemV":"_hlOYg","searchBarV":"_3V2uo","formsubmit":"_2zCyY","menuitemVRTL":"_c0YyE","menuitemNestedV":"_3caW6","menuitemNestedVRTL":"_2MGQ4","menuitemNestedH":"_2a1HQ","dropdownContent":"_gARnM","dropdown-content":"_DB4hp","nav_title":"_3XO7A","ul_child":"_3XXqz"};

var NavBar = function NavBar(props) {
  var orientation;
  if (props.orientation === 'rtl') orientation = 'RTL';else orientation = 'LTR';
  var langjson = props.optionsArray;
  var inputMenu = langjson;

  var setInitialSubMenuState = function setInitialSubMenuState(navigationOptions) {
    var result = {};
    navigationOptions.forEach(function (option) {
      return result[option.text] = false;
    });
    console.log('setInitialSubMenuState', result);
    return result;
  };

  var _useState = useState(setInitialSubMenuState(props.optionsArray)),
      menuHeader = _useState[0];

  var dropDown = useRef([React.createRef(), React.createRef()]);

  var _useState2 = useState(''),
      input = _useState2[0],
      setInput = _useState2[1];

  function handleChange(e) {
    setInput(e.currentTarget.value);
  }

  function handleSubmit(e) {
    console.log('heyyyyyyyy');
    e.preventDefault();
    props.searchFunction(input);
    setInput('');
  }

  var inputList = inputMenu.map(function (ele, index) {
    var _ele$children;

    if (((_ele$children = ele.children) === null || _ele$children === void 0 ? void 0 : _ele$children.length) === 0 && ele.path) {
      return React.createElement("li", {
        key: ele.id,
        "data-testid": 'homeBtnId'
      }, React.createElement(Link, {
        to: ele.path,
        style: props.option === 'vertical' ? {
          textDecoration: 'none',
          color: 'yellow'
        } : {
          textDecoration: 'none',
          color: 'white'
        }
      }, ele.text));
    } else return React.createElement(React.Fragment, null, React.createElement("li", {
        "data-testid": 'childrenHeadersId',
        className: 'nav_title',
        key: ele.id,
        style: props.option === 'vertical' ? {
          position: 'relative',
          "float": 'right',
          color: 'red'
        } : {
          position: 'relative',
          "float": 'right',
          color: 'purple'
        }
      }, ele.text, props.option === 'horizontal' && React.createElement("div", {
        ref: dropDown.current[index - 1]
      }, React.createElement("ul", {
        className: 'ul_child',
        style: menuHeader[ele.text] ? {
          position: 'absolute',
          display: 'block',
          "float": 'right',
          backgroundColor: 'blue'
        } : {
          display: 'none'
        }
      }, ele === null || ele === void 0 ? void 0 : ele.children.map(function (subEl) {
        return React.createElement("li", {
          "data-testid": 'subMenu'
        }, React.createElement(Link, {
          to: subEl.path,
          style: {
            textDecoration: 'none',
            color: 'yellow'
          }
        }, subEl.text));
      }))), props.option === 'vertical' && React.createElement("div", {
        ref: dropDown.current[index - 1]
      }, React.createElement("ul", {
        className: orientation === 'RTL' ? styles.menuitemNestedHRTL : styles.menuitemNestedH,
        style: menuHeader[ele.text] ? {
          position: 'absolute',
          display: 'block',
          "float": 'right',
          backgroundColor: "gainsboro"
        } : {
          display: 'none'
        }
      }, ele === null || ele === void 0 ? void 0 : ele.children.map(function (subEl) {
        return React.createElement("li", null, React.createElement(Link, {
          to: subEl.path,
          style: {
            textDecoration: 'none',
            color: 'black'
          }
        }, subEl.text));
      })))));
  });
  return React.createElement("div", null, props.option === 'horizontal' && props.orientation === 'ltr' && React.createElement("div", {
    className: 'navbarH',
    "data-testid": 'navbar-horizontal-ltr'
  }, React.createElement("nav", null, React.createElement("ul", {
    className: styles.menuitemH,
    style: props.theme ? {
      backgroundColor: props.theme
    } : {}
  }, inputList, React.createElement("div", {
    style: props.search ? {
      display: 'inline - block'
    } : {
      display: 'none'
    },
    className: styles.searchBarH
  }, React.createElement("input", {
    className: styles.searchBarHInput,
    type: 'text',
    placeholder: 'HELLO FROM SEARCH',
    value: input,
    onChange: function onChange() {
      return handleChange;
    }
  }), React.createElement("button", {
    "data-testid": 'go-btn',
    type: 'submit',
    className: styles.formsubmit,
    onClick: handleSubmit
  }, "Go"))))), props.option === 'horizontal' && props.orientation === 'rtl' && React.createElement("div", {
    "data-testid": 'navbar-horizontal-rtl',
    className: 'navbar'
  }, React.createElement("ul", {
    className: styles.menuitemHRTL,
    style: props.theme ? {
      backgroundColor: props.theme
    } : {}
  }, inputList)), props.option === 'vertical' && React.createElement("div", {
    style: {
      display: 'flex'
    },
    className: 'navbarV',
    "data-testid": 'navbar-vertical'
  }, React.createElement("nav", null, React.createElement("ul", {
    className: styles.menuitemV,
    style: props.theme ? {
      backgroundColor: props.theme
    } : {}
  }, React.createElement("br", null), React.createElement("div", {
    style: props.search ? {
      display: 'inline - block'
    } : {
      display: 'none'
    },
    className: 'searchBarV'
  }, React.createElement("input", {
    className: 'searchBarVInput',
    type: 'text',
    placeholder: 'Enter to Search',
    value: input,
    onChange: handleChange
  }), React.createElement("br", null), React.createElement("button", {
    onClick: handleSubmit,
    "data-testid": 'go-btn'
  }, "Go")), inputList))));
};

export { NavBar };
//# sourceMappingURL=index.modern.js.map
